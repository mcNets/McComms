name: Build and Create NuGet Packages

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, master ]
    types: [ closed ]
    paths:
      - 'src/**'
      - '.github/workflows/**'
    
jobs:
  build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore McComms.sln

      - name: Build
        run: dotnet build McComms.sln --no-restore --configuration Release

      # - name: Test
      #   run: dotnet test McComms.sln --no-build --configuration Release

      - name: Pack McComms.Core
        run: dotnet pack src/McComms.Core/McComms.Core.csproj --no-build --configuration Release -o packages

      - name: Pack McComms.gRPC
        run: dotnet pack src/McComms.gRPC/McComms.gRPC.csproj --no-build --configuration Release -o packages

      - name: Pack McComms.Sockets
        run: dotnet pack src/McComms.Sockets/McComms.Sockets.csproj --no-build --configuration Release -o packages

      - name: Pack McComms.WebSockets
        run: dotnet pack src/McComms.WebSockets/McComms.WebSockets.csproj --no-build --configuration Release -o packages

      - name: Upload NuGet packages as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: packages/*.nupkg

      - name: Create Packages directory if it doesn't exist
        run: mkdir -p src/Packages

      - name: Copy NuGet packages to Packages directory
        run: cp packages/*.nupkg src/Packages/

      - name: Push packages to GitHub Packages
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        run: |
          for package in packages/*.nupkg; do
            dotnet nuget push $package --api-key ${{ secrets.NUGET_API_KEY }} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --skip-duplicate
          done

      - name: List generated packages
        run: ls -la packages/
