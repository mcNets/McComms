name: Build and Create NuGet Packages

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, master ]
    types: [ closed ]
    paths:
      - 'src/**'
      - '.github/workflows/**'
    
jobs:
  build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Needed for versioning based on commit history
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Test      
      run: dotnet test --no-build --configuration Release
      
    - name: Pack McComms.Core
      run: dotnet pack src/McComms.Core/McComms.Core.csproj --no-build --configuration Release -o packages
          
    - name: Pack McComms.gRPC
      run: dotnet pack src/McComms.gRPC/McComms.gRPC.csproj --no-build --configuration Release -o packages
          
    - name: Pack McComms.Sockets
      run: dotnet pack src/McComms.Sockets/McComms.Sockets.csproj --no-build --configuration Release -o packages
          
    - name: Pack McComms.WebSockets
      run: dotnet pack src/McComms.WebSockets/McComms.WebSockets.csproj --no-build --configuration Release -o packages

    - name: Upload NuGet packages as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: nuget-packages
        path: packages/*.nupkg
        
    - name: Create Packages directory if it doesn't exist
      run: mkdir -p src/Packages
      
    - name: Copy NuGet packages to Packages directory
      run: cp packages/*.nupkg src/Packages/
        
    # Publish to GitHub Packages if this is a push to main/master
    - name: Push packages to GitHub Packages
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      run: |
        for package in packages/*.nupkg; do
          dotnet nuget push $package --api-key ${{ secrets.NUGET_API_KEY }} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --skip-duplicate
        done
      
    # Create a release for tagged versions
    # - name: Create GitHub Release
    #   if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     name: Release v${{ env.VERSION }}
    #     tag_name: v${{ env.VERSION }}
    #     files: packages/*.nupkg
    #     generate_release_notes: true
    #   env:
    #     NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        
    - name: List generated packages
      run: ls -la packages/
